import{s as n}from"./index-CwOpWW1C.js";class T{cache=new Map;defaultTTL=5*60*1e3;realtimeTTL=1*60*1e3;set(e,t,a){const r={data:t,timestamp:Date.now(),ttl:a||this.defaultTTL};this.cache.set(e,r)}get(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp>t.ttl?(this.cache.delete(e),null):t.data:null}has(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp>t.ttl?(this.cache.delete(e),!1):!0:!1}delete(e){this.cache.delete(e)}clear(){this.cache.clear()}cleanup(){const e=Date.now();for(const[t,a]of this.cache.entries())e-a.timestamp>a.ttl&&this.cache.delete(t)}getStats(){return{size:this.cache.size,keys:Array.from(this.cache.keys())}}setProfiles(e,t){this.set("profiles",e,t||this.defaultTTL)}getProfiles(){return this.get("profiles")}setDashboardStats(e,t,a){this.set(`dashboard-stats-${e}`,t,a||this.realtimeTTL)}getDashboardStats(e){return this.get(`dashboard-stats-${e}`)}setTasks(e,t,a){this.set(`tasks-${e}`,t,a||this.realtimeTTL)}getTasks(e){return this.get(`tasks-${e}`)}setLeaveRequests(e,t,a){this.set(`leaves-${e}`,t,a||this.realtimeTTL)}getLeaveRequests(e){return this.get(`leaves-${e}`)}invalidateUserData(e){this.delete(`dashboard-stats-${e}`),this.delete(`tasks-${e}`),this.delete(`leaves-${e}`)}invalidateGlobalData(){this.delete("profiles");for(const e of this.cache.keys())e.startsWith("dashboard-stats-")&&this.delete(e)}}const o=new T;setInterval(()=>{o.cleanup()},10*60*1e3);class D{async getDashboardStats(e,t,a){const r=o.getDashboardStats(e);if(r)return r;try{const[i,s,c,u,h,m,p,f,g,y]=await Promise.all([n.from("profiles").select("*",{count:"exact",head:!0}).eq("is_active",!0),n.from("leave_requests").select("*",{count:"exact",head:!0}).eq("status","pending"),n.from("tasks").select("*",{count:"exact",head:!0}).in("status",["pending","in_progress"]),n.from("announcements").select("*",{count:"exact",head:!0}),n.from("leave_requests").select("id, profiles!leave_requests_employee_id_fkey(department)").eq("status","approved"),n.from("tasks").select("status"),n.from("tasks").select("*",{count:"exact",head:!0}).eq("assigned_to",e).in("status",["pending","in_progress"]),n.from("leave_requests").select("*",{count:"exact",head:!0}).eq("employee_id",e).eq("status","pending"),t==="manager"||t==="super_admin"?n.from("profiles").select("*",{count:"exact",head:!0}).eq("department",a).eq("is_active",!0):Promise.resolve({count:0}),this.getUpcomingDeadlines(e)]),_=this.processLeavesByDepartment(h.data||[]),v=this.processTasksByStatus(m.data||[]),l={totalEmployees:i.count||0,pendingLeaves:s.count||0,activeTasks:c.count||0,recentAnnouncements:u.count||0,leavesByDepartment:_,tasksByStatus:v,myTasks:p.count||0,myPendingLeaves:f.count||0,teamSize:g.count||0,upcomingDeadlines:y};return o.setDashboardStats(e,l),l}catch(i){throw console.error("Error fetching dashboard stats:",i),i}}async getUpcomingDeadlines(e){const t=new Date;t.setDate(t.getDate()+7);const{count:a}=await n.from("tasks").select("*",{count:"exact",head:!0}).eq("assigned_to",e).lte("due_date",t.toISOString().split("T")[0]).in("status",["pending","in_progress"]);return a||0}processLeavesByDepartment(e){return e.reduce((t,a)=>{const r=a.profiles?.department;if(r){const i=t.find(s=>s.name===r);i?i.value++:t.push({name:r,value:1})}return t},[])}processTasksByStatus(e){return[{name:"Pending",value:e.filter(t=>t.status==="pending").length,color:"#f59e0b"},{name:"In Progress",value:e.filter(t=>t.status==="in_progress").length,color:"#3b82f6"},{name:"Completed",value:e.filter(t=>t.status==="completed").length,color:"#10b981"}]}async getRecentActivity(e){try{const[t,a,r]=await Promise.all([n.from("tasks").select("id, title, description, created_at, status, priority").eq("assigned_to",e).order("created_at",{ascending:!1}).limit(3),n.from("leave_requests").select("id, leave_type, start_date, end_date, created_at, status").eq("employee_id",e).order("created_at",{ascending:!1}).limit(2),n.from("announcements").select("id, title, content, created_at, priority").order("created_at",{ascending:!1}).limit(2)]),i=[];return t.data?.forEach(s=>{i.push({id:s.id,type:"task",title:s.title,description:s.description||"",timestamp:s.created_at,status:s.status,priority:s.priority})}),a.data?.forEach(s=>{i.push({id:s.id,type:"leave",title:`${s.leave_type} Leave Request`,description:`${s.start_date} to ${s.end_date}`,timestamp:s.created_at,status:s.status})}),r.data?.forEach(s=>{i.push({id:s.id,type:"announcement",title:s.title,description:s.content?.substring(0,100)+"..."||"",timestamp:s.created_at,priority:s.priority})}),i.sort((s,c)=>new Date(c.timestamp).getTime()-new Date(s.timestamp).getTime()).slice(0,5)}catch(t){return console.error("Error fetching recent activity:",t),[]}}async getEmployees(){const e=o.getProfiles();if(e)return e;try{const{data:t,error:a}=await n.from("profiles").select("*").eq("is_active",!0).order("full_name");if(a)throw a;return o.setProfiles(t||[]),t||[]}catch(t){return console.error("Error fetching employees:",t),[]}}async getTasks(e,t){const a=o.getTasks(e);if(a)return a;try{let r=n.from("tasks").select(`
          *,
          assigned_to_profile:profiles!assigned_to(*),
          assigned_by_profile:profiles!assigned_by(*)
        `);t==="employee"&&(r=r.or(`assigned_to.eq.${e},assigned_by.eq.${e}`));const{data:i,error:s}=await r.order("created_at",{ascending:!1});if(s)throw s;return o.setTasks(e,i||[]),i||[]}catch(r){return console.error("Error fetching tasks:",r),[]}}invalidateCache(e,t){e==="user"&&t?o.invalidateUserData(t):e==="global"&&o.invalidateGlobalData()}}const q=new D;export{q as d};
